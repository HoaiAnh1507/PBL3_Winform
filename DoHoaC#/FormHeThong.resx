<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="heThong1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACiASADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3uiiiuA90KKKKACiinRLvkAPSgTdlcI0MjYHHvStGRJsHJqwq
        7Zj5ajGOeelGPKkLuc5HpWnLoZc7voVGBUkHgiinSZZi5BAbpTahmqegUUUUhhRRRQAUUAZOBU8MRWYb
        8dM00rkuSRBRVhlWW59sc+9RTALIQvSm1YSlfQZRRRUlhRRRQAUUUUAFFFFABRRTo13yBfWgTdtQjQuw
        UUrRlZNnU1YVdk5CLkY9elGPLmLyEcj0q+XQz53fQqEEHB4NFOlJZy2CATxTag0WwUUUUDCilKMFDEcH
        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
</value>
  </data>
</root>